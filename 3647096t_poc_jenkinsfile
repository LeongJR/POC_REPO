pipeline {

    agent any

    stages {
        stage("ST1 3647096t"){
            steps{
                echo "ST1 3647096t: Environment prepared. Prepared to rollout to test server"
            }
        }

        stage("ST2 3647096t"){
            steps{
	     script {
                echo 'Removing old backup image, error message is expected if container does not exist.'
                sh 'docker image rm bkup-test-image ; exit 0'
                echo ''

		echo 'Making backup image of test server'
		def container_id = sh 'docker ps | grep 'TEST3' | awk '{print $2}''
		echo "${container_id}"
		sh "docker commit "${container_id}" bkup-test-image"
	
		echo "Listing all images in local after creation"
                sh 'docker images'
                echo ''

		//Clone repo and run bolt script
                 sh '''#!/bin/bash
                 puppet resource file /tmp/clone ensure=absent force=true;
                 puppet resource file /tmp/clone ensure=directory;
	   	 cd /tmp/clone;
	   	 git clone https://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@github.com/LeongJR/POC_REPO.git;
                 targets='TESTsvr3647096t';
                 locate_script='/tmp/clone/POC_REPO/3647096t_script';
                 bolt script run $locate_script -t $targets -u clientadm -p user123 --no-host-key-check --run-as root;
                 '''
		echo ''
		echo "ST2 3647096t: Test server is backed up. Test server is updated."
		}
            }
        }
        
        stage("ST3 3647096t"){
	 steps {
		//execute curl
		sh 'curl –Is http://TESTsvr3647096t.localdomain | head –n 1  > /tmp/TEST-result-file'
		sh 'cat /tmp/TEST-result-file'
		echo "ST3 3647096t: Test result for TEST server is generated : TEST-result-file"
	  }
        	} 

        stage("ST4 3647096t"){
        steps{
	  script {
            userResponse = input message: 'ST4 3647096t, TEST server\'s testing results have been inspected', parameters: [choice(choices: ['Proceed Production', 'Rollback TEST'], description: 'Proceed or Rollback?', name: 'response')]     
            echo "Reponse ${userResponse} was selected"
             }
           }
        }     
      
        stage("ST5 3647096t"){
        steps{
	  script{
            if (userResponse == 'Proceed Production'){
            echo "ST5 3647096t : Proceed to PRODUCTION phase"
	    //Clone repo and run bolt script
                 sh '''#!/bin/bash
                 puppet resource file /tmp/clone ensure=absent force=true;
                 puppet resource file /tmp/clone ensure=directory;
	   	 cd /tmp/clone;
	   	 git clone https://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@github.com/LeongJR/POC_REPO.git;
                 targets='PRODsvr3647096t';
                 locate_script='/tmp/clone/POC_REPO/3647096t_script';
                 bolt script run $locate_script -t $targets -u clientadm -p user123 --no-host-key-check --run-as root;
        	'''
            }
            else {
	   //rollback
            echo "ST5 3647096t : Rollback test server"
	     }
	    }
          }
        }

        stage("ST6 3647096t"){
        steps{
	  script{
            if (userResponse == 'Proceed Production'){
            echo "ST6 3647096t : Production server updated"
            }
            else {
            echo "ST6 3647096t : TEST server is rollback"
            return
	     }
	    }
	}

        post {
            always{
                cleanWs (cleanWhenFailure: false,
                        cleanWhenNotBuilt: false,
                        cleanWhenUnstable: false,
                        notFailBuild: true)
            }
        }
   }
}
}
